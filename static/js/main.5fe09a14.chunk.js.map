{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/Transaction.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionTableRow.jsx","components/TransactionHistory/TransactionHistory.jsx","components/FriendList/FriendListFragment.jsx","components/FriendList/FriendList.jsx","components/Statistics/Statistics.jsx","components/Profile/Profile.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","TransactionTableRow","type","amount","currency","className","f","transactionBorder","TransactionHistory","items","transactionHistory","map","id","FriendListFragment","avatar","name","isOnline","item","src","alt","width","FriendList","friends","list","Statistics","title","stats","statistics","statlist","stat","style","backgroundColor","Math","random","toString","substring","toUpperCase","label","percentage","Profile","tag","location","profile","description","quantity","followers","views","likes","defaultProps","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fe09a14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3tfAn\",\"description\":\"Profile_description__2gwXT\",\"avatar\":\"Profile_avatar__29BDy\",\"name\":\"Profile_name__3VZZM\",\"tag\":\"Profile_tag__3rkWO\",\"location\":\"Profile_location__Tq1ME\",\"stats\":\"Profile_stats__3E3_n\",\"items\":\"Profile_items__1LLbs\",\"label\":\"Profile_label__3UiFZ\",\"quantity\":\"Profile_quantity__3kh39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__hr_6b\",\"title\":\"Statistics_title__2Tw9F\",\"statlist\":\"Statistics_statlist__3jN9c\",\"item\":\"Statistics_item__zrQB3\",\"label\":\"Statistics_label__2Te-e\",\"percentage\":\"Statistics_percentage__DOGIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transaction_transactionHistory__1hWKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1C78Q\",\"list\":\"FriendList_list__1p3SX\",\"item\":\"FriendList_item__2GLNj\",\"status\":\"FriendList_status__3umPt\",\"online\":\"FriendList_online__3oXbr\",\"offline\":\"FriendList_offline__YE_Up\",\"avatar\":\"FriendList_avatar__3Uw5t\"};","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport f from './Transaction.module.css';\n\nconst TransactionTableRow = ({ type, amount, currency }) => {\n  return (\n    // <tr key={id}>\n    <Fragment>\n      <td className={f.transactionBorder}>{type}</td>\n      <td className={f.transactionBorder}>{amount}</td>\n      <td className={f.transactionBorder}>{currency}</td>\n    </Fragment>\n  );\n};\n\nTransactionTableRow.propTypes = {\n  type: PropTypes.string,\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n};\n\nexport default TransactionTableRow;\n","import PropTypes from 'prop-types';\nimport TransactionTableRow from './TransactionTableRow.jsx';\nimport f from './Transaction.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={f.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <TransactionTableRow\n              type={type}\n              amount={amount}\n              currency={currency}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import PropTypes from 'prop-types';\n\nimport f from './FriendList.module.css';\n\nfunction FriendListFragment({ id, avatar, name, isOnline }) {\n  return (\n    <li className={f.item}>\n      <span>{isOnline}</span>\n      <img className={f.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={f.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListFragment.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.oneOf([true, false]),\n};\n\nexport default FriendListFragment;\n","import PropTypes from 'prop-types';\nimport FriendListFragment from './FriendListFragment';\nimport f from './FriendList.module.css';\nfunction FriendList({ friends }) {\n  return (\n    <ul className={f.list}>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <FriendListFragment\n          key={id}\n          avatar={avatar}\n          name={name}\n          isOnline={isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport f from './Statistics.module.css';\n\nconst randomColor = () => {\n  return (\n    '#' + (Math.random().toString(16) + '000000').substring(2, 8).toUpperCase()\n  );\n};\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={f.statistics}>\n      {title && <h2 className={f.title}>{title}</h2>}\n\n      <ul className={f.statlist}>\n        {stats.map(stat => (\n          <li\n            className={f.item}\n            key={stat.id}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={f.label}>{stat.label}</span>\n\n            <span className={f.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport f from './Profile.module.css';\nfunction Profile({ name, avatar, tag, location, stats }) {\n  return (\n    <div className={f.profile}>\n      <div className={f.description}>\n        <img className={f.avatar} src={avatar} alt={name} width=\"100\" />\n        <p className={f.name}>{name}</p>\n        <p className={f.tag}>@{tag}</p>\n        <p className={f.location}>{location}</p>\n      </div>\n\n      <ul className={f.stats}>\n        <li className={f.items}>\n          <span className={f.label}>Followers</span>\n          <span className={f.quantity}>{stats.followers}</span>\n        </li>\n        <li className={f.items}>\n          <span className={f.label}>Views</span>\n          <span className={f.quantity}>{stats.views}</span>\n        </li>\n        <li className={f.items}>\n          <span className={f.label}>Likes</span>\n          <span className={f.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.defaultProps = {\n  avatar:\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\n  location: 'hidden by user',\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import React, { Fragment } from 'react';\n\nimport TransactionHistory from '../src/components/TransactionHistory/TransactionHistory';\nimport transactions from './transactions.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './friends.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './statistical-data.json';\n\nimport Profile from './components/Profile/Profile';\nimport user from './user.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}